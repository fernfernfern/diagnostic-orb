version: 2.1

orbs:
  orb-tools: circleci/orb-tools@3.0.0
  diagnostic-orb: circleci/diagnostic-orb@dev:alpha
  circle-compare-url: iynere/compare-url@0.4.4

executors:
  cli:
    resource_class: small
    docker:
      - image: circleci/circleci-cli:0.1.5060

  github:
    resource_class: small
    docker:
      - image: cibuilds/github

  lint:
    resource_class: small
    docker:
      - image: singapore/lint-condo

  machine:
    machine: true

  macos:
    macos:
      xcode: "10.1.0"

  node:
    docker:
      - image: circleci/node

jobs:
  lint:
    executor: lint
    steps:
      - checkout
      - run: yamllint .

  # validate goes here: see workflow

  publish-dev:
    executor: cli
    steps:
      - checkout

      - attach_workspace:
          at: workspace

      - run:
          name: publish various dev versions
          command: |
            # dev:alpha, for integration testing
            circleci orb publish workspace/orb.yml circleci/diagnostic-orb@dev:alpha --token $CIRCLE_TOKEN

            # branch + sha, for transparency
            circleci orb publish workspace/orb.yml circleci/diagnostic-orb@dev:$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

            # sha only, for potential prod promotion
            circleci orb publish workspace/orb.yml circleci/diagnostic-orb@dev:${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

      - store_artifacts:
          path: workspace/orb.yml

  trigger-integration:
    executor: github
    parameters:
      tag:
        type: enum
        default: "integration"
        enum: ["integration", master]
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "c5:8f:90:19:45:fc:2f:65:1e:42:1f:4e:8b:15:6c:cb"

      - run:
          name: git config
          command: |
            git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
            git config --global user.name "$CIRCLE_USERNAME"

      - circle-compare-url/reconstruct

      - run:
          name: trigger integration workflow, possible patch / minor / major release
          command: |
            CIRCLE_COMPARE_URL=$(cat CIRCLE_COMPARE_URL.txt)

            COMMIT_RANGE=$(echo $CIRCLE_COMPARE_URL | sed 's:^.*/compare/::g')

            echo "Commit range: $COMMIT_RANGE"

            if [[ $(git diff $COMMIT_RANGE --name-status | grep -e "src/commands" -e "src/jobs") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-major-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            elif [[ $(git diff $COMMIT_RANGE --name-status | grep -e "src/examples" -e "src/@orb.yml") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-minor-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            else
              INTEGRATION_TAG=<<parameters.tag>>-patch-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            fi

            git tag $INTEGRATION_TAG
            git push origin $INTEGRATION_TAG

  integration-tests-1:
    executor: macos
    steps:
      - checkout

      - run: |
          mkdir -p ~/project/fastlane
          echo fastfile > ~/project/fastlane/Fastfile
          echo appfile > ~/project/fastlane/Appfile
          echo gymfile > ~/project/fastlane/Gymfile
          mkdir -p ~/project/ccidiag.xcodeproj
          echo project > ~/project/ccidiag.xcodeproj/project.pbxproj

      - diagnostic-orb/env-info
      - diagnostic-orb/ios-logs
      - diagnostic-orb/memory
      - diagnostic-orb/test-results
      - diagnostic-orb/store-report

  integration-tests-2:
    executor: machine
    steps:
      - checkout

      - diagnostic-orb/env-info
      - diagnostic-orb/memory
      - diagnostic-orb/test-results
      - diagnostic-orb/store-report

  integration-tests-3:
    executor: node
    steps:
      - checkout

      - diagnostic-orb/env-info
      - diagnostic-orb/memory
      - diagnostic-orb/store-report

  dev-promote-prod:
    executor: cli
    parameters:
      release:
        type: enum
        default: "patch"
        enum: ["patch", "minor", "major"]
    steps:
      - run:
          name: major release if changes to src/commands or src/jobs, minor if to src/examples or src/@orb.yml, otherwise patch
          command: circleci orb publish promote circleci/diagnostic-orb@dev:${CIRCLE_SHA1:0:7} <<parameters.release>> --token $CIRCLE_TOKEN

integration-dev_filters: &integration-dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

integration-master_filters: &integration-master_filters
  branches:
    ignore: /.*/
  tags:
    only: /master-.*/

add-ssh-keys: &add-ssh-keys
  [add_ssh_keys: {fingerprints: ["c5:8f:90:19:45:fc:2f:65:1e:42:1f:4e:8b:15:6c:cb"]}]

cleanup-git-tag: &cleanup-git-tag
  [run: {when: "always", name: "cleanup tag", command: "git config --global user.email $CIRCLE_USERNAME@users.noreply.github.com && git config --global user.name $CIRCLE_USERNAME && git push --delete origin $CIRCLE_TAG"}]

workflows:
  lint_pack-validate_publish-dev:
    jobs:
      - lint

      - orb-tools/pack:
          name: pack-validate
          workspace-path: orb.yml
          artifact-path: orb.yml
          requires:
            - lint

      - publish-dev:
          requires:
            - pack-validate
          context: orb-publishing

      - trigger-integration:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - publish-dev
          filters:
            branches:
              ignore: master

      - trigger-integration:
          name: trigger-integration-master
          context: orb-publishing
          tag: master
          requires:
            - publish-dev
          filters:
            branches:
              only: master

  integration_tests-prod_deploy:
    jobs:
      # triggered by non-master branch commits
      - integration-tests-1:
          name: integration-tests-macos-dev
          pre-steps: *add-ssh-keys
          filters: *integration-dev_filters

      - integration-tests-2:
          name: integration-tests-machine-dev
          pre-steps: *add-ssh-keys
          filters: *integration-dev_filters

      - integration-tests-3:
          name: integration-tests-node-dev
          requires: [integration-tests-macos-dev, integration-tests-machine-dev]
          pre-steps: *add-ssh-keys
          filters: *integration-dev_filters
          post-steps: *cleanup-git-tag

      # triggered by master branch commits
      - integration-tests-1:
          name: integration-tests-macos-master
          pre-steps: *add-ssh-keys
          filters: *integration-master_filters

      - integration-tests-2:
          name: integration-tests-machine-master
          pre-steps: *add-ssh-keys
          filters: *integration-master_filters

      - integration-tests-3:
          name: integration-tests-node-master
          requires: [integration-tests-macos-master, integration-tests-machine-master]
          pre-steps: *add-ssh-keys
          filters: *integration-master_filters
          post-steps: *cleanup-git-tag

      # patch, minor, or major publishing
      - dev-promote-prod:
          name: dev-promote-patch
          context: orb-publishing
          requires: [integration-tests-3-master]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-patch.*/

      - dev-promote-prod:
          name: dev-promote-minor
          context: orb-publishing
          requires: [integration-tests-3-master]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-minor.*/

      - dev-promote-prod:
          name: dev-promote-major
          context: orb-publishing
          requires: [integration-tests-3-master]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-major.*/
